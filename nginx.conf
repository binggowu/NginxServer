#是注释行，
#每个有效配置项用 等号 处理，等号前不超过40个字符，等号后不超过400个字符；
 
#[开头的表示组信息，也等价于注释行
#[Socket]
#ListenPort = 5678    
#DBInfo = 127.0.0.1;1234;myr;123456;mxdb_g

#日志相关
[Log]
#日志文件输出目录和文件名
Log=logs/error.log
# Log=error.log

#只打印日志等级<= 数字 的日志到日志文件中 ，日志等级0-8,0级别最高，8级别最低。
LogLevel = 8

#进程相关
[Proc]
#创建 这些个 worker进程
WorkerProcesses = 1

# 是否按守护进程方式运行, 1: 按守护进程方式运行; 0: 不按守护进程方式运行
Daemon = 0

# 处理收消息队列的"线程池"中线程数量, 不建议超过300
ProcMsgRecvWorkThreadCount = 120

#和网络相关
[Net]
# 监听的端口数量, 一般都是1个, 当然如果支持多于一个也是可以的
ListenPortCount = 1
#ListenPort+数字【数字从0开始】，这种ListenPort开头的项有几个，取决于ListenPortCount的数量，
ListenPort0 = 80
#ListenPort1 = 443

# 每个 worker 进程允许连接的客户端数, 实际其中有一些连接要被监听socket使用, 实际允许的客户端连接数会比这个数小一些.
worker_connections = 2048

# 为确保系统稳定, socket关闭后连接(ngx_connection_t)不会立即收回, 而要等一定的秒数(Sock_RecyConnectionWaitTime), 在这个秒数之后, 才进行连接的回收
Sock_RecyConnectionWaitTime = 150

# 是否开启踢人时钟, 1开启, 0不开启
Sock_WaitTimeEnable = 1
# 多少秒检测一次心跳超时, 只有当 Sock_WaitTimeEnable=1 时, 本项才有用
Sock_MaxWaitTime = 20
# 当时间到达 Sock_MaxWaitTime 指定的时间时, 直接把客户端踢出去, 只有当 Sock_WaitTimeEnable=1 时, 本项才有用.
Sock_TimeOutKick = 0

# 和网络安全相关
[NetSecurity]
# Flood攻击检测是否开启, 1开启, 0不开启
Sock_FloodAttackKickEnable = 1
# 每次收到数据包的时间间隔(单位ms)
Sock_FloodTimeInterval = 100
# Sock_FloodTimeInterval 条件的累计次数
Sock_FloodKickCounter = 10
